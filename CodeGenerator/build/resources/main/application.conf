java{
fileExtension=".java"
pathForGeneratedObject = "C:\\CS474_Projects\\CodeGenerator\\src\\main\\resources"
PathForGeneratedFile = "C:\\CS474_Projects\\GeneratedCode"
builder="Builder"
set="set"
get="get"
build="build"
name="Name"
factory="Factory"
map="Map"
proxy="proxy"
super="super"
void ="void"
public ="public"
interface="interface"
extends="extends"
clazz="class"
abstract="abstract"
implements="implements"
this="this"

dataType{
            string="String"
            int="int"
        }
modifiers{
            private="private"
            public ="public"
        }
}
memento="Memento"
add="add"
careTaker = "CareTaker"
state="state"
action="action"
setNext="setNext"
process="process"
nextIn="nextIn"
execute="execute"
on="On"
off="Off"
list="List"
decorator="Decorator"
interpreterDesignPattern="InterpreterDesignPattern"
prototypeDesignPattern="PrototypeDesignPattern"
facadeDesignPattern = "FacadeDesignPattern"
mediatorDesignPattern="MediatorDesignPattern"
factoryDesignPattern = "FactoryDesignPattern"
builderDesignPattern = "BuilderDesignPattern"
visitorDesignPattern="VisitorDesignPattern"
templateDesignPattern="TemplateDesignPattern"
strategyDesignPattern="StrategyDesignPattern"
stateDesignPattern="StateDesignPattern"
proxyDesignPattern="ProxyDesignPattern"
prototypeDesignPattern="PrototypeDesignPattern"
observerDesignPattern="ObserverDesignPattern"
mementoDesignPattern="MementoDesignPattern"
iteratorDesignPattern="IteratorDesignPattern"
flyweightDesignPattern="FlyweightDesignPattern"
decoratorDesignPattern="DecoratorDesignPattern"
compositeDesignPattern="CompositeDesignPattern"
commandDesignPattern="CommandDesignPattern"
chainOfResponsibilityDesignPattern="ChainOfResponsibilityDesignPattern"
builderDesignPattern="BuilderDesignPattern"
bridgeDesignPattern="BridgeDesignPattern"
adapterDesignPattern="AdapterDesignPattern"
abstractFactoryDesignPattern="AbstractFactoryDesignPattern"
mediator="mediator"
adapter = "Adpator"
